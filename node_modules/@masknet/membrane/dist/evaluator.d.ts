import { VirtualEnvironment, type DistortionCallback, type Instrumentation } from '@locker/near-membrane-base';
export interface EnvironmentOptions {
    distortionCallback?: DistortionCallback | undefined;
    endowments?: PropertyDescriptorMap | undefined;
    globalObjectShape?: object | undefined;
    instrumentation?: Instrumentation | undefined;
    rethrowOptimization?: boolean;
}
export interface MembraneInstance {
    execute<T>(func: () => T): T;
    executeAsync<T>(func: () => PromiseLike<T>): Promise<Awaited<T>>;
    virtualEnvironment: VirtualEnvironment;
}
export default function createVirtualEnvironment(globalObject: typeof globalThis, redGlobalObject: typeof globalThis, options?: EnvironmentOptions): MembraneInstance;
//# sourceMappingURL=evaluator.d.ts.map