import { Instrumentation } from './instrumentation';
import { Getter, PropertyKey, PropertyKeys } from './types';
declare type CallablePushTarget = (foreignTargetPointer: () => void, foreignTargetTraits: number, foreignTargetFunctionArity: number, foreignTargetFunctionName: string, foreignTargetTypedArrayLength: number) => Pointer;
declare type CallablePushErrorTarget = CallablePushTarget;
declare type CallableApply = (targetPointer: Pointer, thisArgPointerOrUndefined: PointerOrPrimitive, ...args: PointerOrPrimitive[]) => PointerOrPrimitive;
declare type CallableConstruct = (targetPointer: Pointer, newTargetPointer: PointerOrPrimitive, ...args: PointerOrPrimitive[]) => PointerOrPrimitive;
declare type CallableDefineProperty = (targetPointer: Pointer, key: PropertyKey, configurable: boolean | symbol, enumerable: boolean | symbol, writable: boolean | symbol, valuePointer: PointerOrPrimitive, getterPointer: PointerOrPrimitive, setterPointer: PointerOrPrimitive, foreignCallableNonConfigurableDescriptorCallback: CallableNonConfigurableDescriptorCallback) => boolean;
declare type CallableDeleteProperty = (targetPointer: Pointer, key: PropertyKey) => boolean;
declare type CallableGet = (targetPointer: Pointer, targetTraits: number, key: PropertyKey, receiverPointerOrPrimitive: PointerOrPrimitive) => PointerOrPrimitive;
declare type CallableGetOwnPropertyDescriptor = (targetPointer: Pointer, key: PropertyKey, foreignCallableDescriptorCallback: CallableDescriptorCallback) => void;
declare type CallableGetPrototypeOf = (targetPointer: Pointer) => PointerOrPrimitive;
declare type CallableHas = (targetPointer: Pointer, key: PropertyKey) => boolean;
declare type CallableIsExtensible = (targetPointer: Pointer) => boolean;
declare type CallableOwnKeys = (targetPointer: Pointer, foreignCallableKeysCallback: (...args: ReturnType<typeof Reflect.ownKeys>) => void) => void;
declare type CallablePreventExtensions = (targetPointer: Pointer) => number;
declare type CallableSet = (targetPointer: Pointer, key: PropertyKey, valuePointerOrPrimitive: PointerOrPrimitive, receiverPointerOrPrimitive: PointerOrPrimitive) => boolean;
declare type CallableDebugInfo = (...args: Parameters<typeof console.info>) => void;
declare type CallableGetLazyPropertyDescriptorStateByTarget = (targetPointer: Pointer) => PointerOrPrimitive;
declare type CallableGetTargetIntegrityTraits = (targetPointer: Pointer) => number;
declare type CallableGetToStringTagOfTarget = (targetPointer: Pointer) => string;
declare type CallableGetTypedArrayIndexedValue = (targetPointer: Pointer, index: PropertyKey) => number | bigint;
declare type CallableInstallErrorPrepareStackTrace = () => void;
declare type CallableIsTargetLive = (targetPointer: Pointer) => boolean;
declare type CallableIsTargetRevoked = (targetPointer: Pointer) => boolean;
declare type CallableSerializeTarget = (targetPointer: Pointer) => SerializedValue | undefined;
declare type CallableSetLazyPropertyDescriptorStateByTarget = (targetPointer: Pointer, statePointer: Pointer) => void;
declare type CallableBatchGetPrototypeOfAndGetOwnPropertyDescriptors = (targetPointer: Pointer, foreignCallableDescriptorsCallback: CallableDescriptorsCallback) => PointerOrPrimitive;
declare type CallableBatchGetPrototypeOfWhenHasNoOwnProperty = (targetPointer: Pointer, key: PropertyKey) => PointerOrPrimitive;
declare type CallableBatchGetPrototypeOfWhenHasNoOwnPropertyDescriptor = (targetPointer: Pointer, key: PropertyKey, foreignCallableDescriptorCallback: CallableDescriptorCallback) => PointerOrPrimitive;
declare type CallableDescriptorCallback = (key: PropertyKey, configurable: boolean | symbol, enumerable: boolean | symbol, writable: boolean | symbol, valuePointer: PointerOrPrimitive, getterPointer: PointerOrPrimitive, setterPointer: PointerOrPrimitive) => void;
declare type CallableDescriptorsCallback = (...descriptorTuples: [...Parameters<CallableDescriptorCallback>]) => void;
declare type CallableNonConfigurableDescriptorCallback = CallableDescriptorCallback;
interface HooksOptions {
    distortionCallback?: DistortionCallback;
    instrumentation?: Instrumentation;
}
declare type PointerOrPrimitive = Pointer | Primitive;
declare type Primitive = bigint | boolean | null | number | string | symbol | undefined;
declare type SerializedValue = bigint | boolean | number | string | symbol;
export declare type CallableDefineProperties = (targetPointer: Pointer, ...descriptorTuples: [...Parameters<CallableDescriptorCallback>]) => void;
export declare type CallableEvaluate = (sourceText: string) => PointerOrPrimitive;
export declare type CallableGetPropertyValuePointer = (targetPointer: Pointer, key: PropertyKey) => Pointer;
export declare type CallableInstallLazyPropertyDescriptors = (targetPointer: Pointer, ...ownKeysAndUnforgeableGlobalThisKeys: PropertyKeys) => void;
export declare type CallableLinkPointers = (targetPointer: Pointer, foreignTargetPointer: Pointer) => void;
export declare type CallableSetPrototypeOf = (targetPointer: Pointer, protoPointerOrNull: Pointer | null) => boolean;
export declare type DistortionCallback = (target: ProxyTarget) => ProxyTarget;
export declare type GetSelectedTarget = Getter;
export declare type GetTransferableValue = (value: any) => PointerOrPrimitive;
export declare type HooksCallback = (globalThisPointer: Pointer | undefined, getSelectedTarget: GetSelectedTarget | undefined, getTransferableValue: GetTransferableValue | undefined, callableGetPropertyValuePointer: CallableGetPropertyValuePointer | undefined, callableEvaluate: CallableEvaluate | undefined, callableLinkPointers: CallableLinkPointers | undefined, callablePushErrorTarget: CallablePushErrorTarget, callablePushTarget: CallablePushTarget, callableApply: CallableApply, callableConstruct: CallableConstruct, callableDefineProperty: CallableDefineProperty, callableDeleteProperty: CallableDeleteProperty, callableGet: CallableGet, callableGetOwnPropertyDescriptor: CallableGetOwnPropertyDescriptor, callableGetPrototypeOf: CallableGetPrototypeOf, callableHas: CallableHas, callableIsExtensible: CallableIsExtensible, callableOwnKeys: CallableOwnKeys, callablePreventExtensions: CallablePreventExtensions, callableSet: CallableSet, callableSetPrototypeOf: CallableSetPrototypeOf, callableDebugInfo: CallableDebugInfo, callableDefineProperties: CallableDefineProperties | undefined, callableGetLazyPropertyDescriptorStateByTarget: CallableGetLazyPropertyDescriptorStateByTarget, callableGetTargetIntegrityTraits: CallableGetTargetIntegrityTraits, callableGetToStringTagOfTarget: CallableGetToStringTagOfTarget, callableGetTypedArrayIndexedValue: CallableGetTypedArrayIndexedValue, callableInstallErrorPrepareStackTrace: CallableInstallErrorPrepareStackTrace, callableInstallLazyPropertyDescriptors: CallableInstallLazyPropertyDescriptors | undefined, callableIsTargetLive: CallableIsTargetLive, callableIsTargetRevoked: CallableIsTargetRevoked, callableSerializeTarget: CallableSerializeTarget, callableSetLazyPropertyDescriptorStateByTarget: CallableSetLazyPropertyDescriptorStateByTarget, callableBatchGetPrototypeOfAndGetOwnPropertyDescriptors: CallableBatchGetPrototypeOfAndGetOwnPropertyDescriptors, callableBatchGetPrototypeOfWhenHasNoOwnProperty: CallableBatchGetPrototypeOfWhenHasNoOwnProperty, callableBatchGetPrototypeOfWhenHasNoOwnPropertyDescriptor: CallableBatchGetPrototypeOfWhenHasNoOwnPropertyDescriptor) => void;
export declare type Pointer = CallableFunction;
export declare type ProxyTarget = CallableFunction | any[] | object;
export declare function createMembraneMarshall(globalObject?: typeof globalThis | (WindowProxy & typeof globalThis)): (color: string, foreignCallableHooksCallback: HooksCallback, options?: HooksOptions | undefined) => HooksCallback;
export {};
//# sourceMappingURL=membrane.d.ts.map